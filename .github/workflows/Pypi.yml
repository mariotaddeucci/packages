name: Publish to PyPi

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:

  packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - id: set-matrix
      run: echo "::set-output name=matrix::{\"package\":[$(find . -name config.yml -exec dirname {} \; | sed "s|^\./||" | sed 's/.*/"&"/' | grep -v / | tr '\n' ',' | sed 's/.$//')]}"
      working-directory: "packages"

  Deploy:
    needs: packages
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.packages.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2
        with:
            fetch-depth: 100

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Checking for changes on python/${{ matrix.package }}
        uses: marceloprado/has-changed-path@v1
        id: pkg
        with:
          paths: packages/${{ matrix.package }}

      - name: Installing dependencies
        if: steps.pkg.outputs.changed == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        working-directory: "packages/${{ matrix.package }}"

      - name: Test with Pytest
        if: steps.pkg.outputs.changed == 'true'
        run: if [ -f tests/test_*.py ]; then pip install pytest && pytest tests/ ; fi
        working-directory: "packages/${{ matrix.package }}"

      - name: Check PyPi release
        if: github.ref == 'refs/heads/master' && steps.pkg.outputs.changed == 'true'
        run: |
          pip install pyyaml requests
          echo ::set-output name=HTTP_STATUS::$(python check_release.py ${{ matrix.package }})
        working-directory: "packages"
        id: pypi

      - name: Publish to PyPi
        if: contains(steps.pypi.outputs.HTTP_STATUS, '404')
        run: |
          cp setup.py ${{ matrix.package }}/setup.py
          cd ${{ matrix.package }}
          pip install twine setuptools wheel
          python setup.py sdist
          python setup.py bdist_wheel
          twine upload dist/* -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_TOKEN }}
        working-directory: "packages"
