name: Publish to PyPi

on:
  pull_request:
    branches: [master]
    paths:
      - python/**
  push:
    branches: [master]
    paths:
      - python/**

jobs:

  packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - id: set-matrix
      run: echo "::set-output name=matrix::{\"package\":[$(find . -name config.yml -exec dirname {} \; | sed "s|^\./||" | sed 's/.*/"&"/' | grep -v / | tr '\n' ',' | sed 's/.$//')]}"
      working-directory: "python"

  CI:
    needs: packages
    runs-on: ubuntu-latest
    env:
      PUSH_PACKAGES: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    strategy:
      matrix: ${{fromJson(needs.packages.outputs.matrix)}}
      
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      
      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        working-directory: "python/${{ matrix.package }}"

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        working-directory: "python/${{ matrix.package }}"
      
      - name: Test with Pytest
        run: if [ -f tests/test_*.py ]; then pip install pytest && pytest tests/ ; fi
        working-directory: "python/${{ matrix.package }}"
      
      - name: Test with Pytest
        run: if [ -f tests/test_*.py ]; then pip install pytest && pytest tests/ ; fi
        working-directory: "python/${{ matrix.package }}"
      
      - name: Publish
        if: ${{ env.PUSH_PACKAGES }}
        run: if [ -f tests/test_*.py ]; then pip install pytest && pytest tests/ ; fi
        working-directory: "python/${{ matrix.package }}"